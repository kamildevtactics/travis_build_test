jobs:
  include:
    - dist: focal
      env:
        - TARGET_ENV=stable_focal
    - dist: focal
      group: dev
      env:
        - TARGET_ENV=dev_focal

script:
  - distro=$(lsb_release -c -s)
  - mkdir -p $distro
  - dpkg-query -W -f='${Package} ${Version}\n' > $distro/${TARGET_ENV}_installed_packages.txt

after_success:
  - git config --global user.name "kamildevtactics"
  - git config --global user.email "kamil.maludzinski@devtactics.net"
  - git clone https://kamildevtactics:$GITHUB_TOKEN@github.com/kamildevtactics/travis_build_test.git
  - cd travis_build_test
  - mkdir -p $distro
  - ls -ltr
  - cp ../$distro/${TARGET_ENV}_installed_packages.txt $distro/${TARGET_ENV}_installed_packages.txt
  - git add $distro/${TARGET_ENV}_installed_packages.txt
  - git commit -m "Update installed packages from Travis CI ($TARGET_ENV)"
  - git push origin main
  - |
    if [[ "$TARGET_ENV" == *"stable"* ]]; then
      echo "Comparing stable and dev installed packages..."
      DEV_ENV="${TARGET_ENV/stable/dev}"
      echo "Comparing $TARGET_ENV with $DEV_ENV"
      if [[ -f "$distro/${DEV_ENV}_installed_packages.txt" ]]; then
        echo "Found $DEV_ENV installed package list, generating diff report..."
        DIFF_REPORT="${distro}/${TARGET_ENV}_vs_${DEV_ENV}_diff.txt"
        
        # Create a fresh report with a header (bez timestampa, żeby uniknąć pętli)
        echo "======================================================" > $DIFF_REPORT
        echo "    PACKAGE COMPARISON REPORT: $TARGET_ENV vs $DEV_ENV" >> $DIFF_REPORT
        echo "======================================================" >> $DIFF_REPORT
        echo "" >> $DIFF_REPORT
        
        # Format plików jest już prosty: pakiet wersja - nie potrzebujemy złożonej logiki parsowania
        
        # 1. PACKAGES ADDED (in dev but not in stable)
        echo "1. PACKAGES ADDED (present in $DEV_ENV but missing in $TARGET_ENV)" >> $DIFF_REPORT
        echo "--------------------------------------------------------------" >> $DIFF_REPORT
        ADDED_COUNT=0
        
        # Get only package names for comparison
        cut -d' ' -f1 $distro/${TARGET_ENV}_installed_packages.txt | sort > ${TARGET_ENV}_names.txt
        cut -d' ' -f1 $distro/${DEV_ENV}_installed_packages.txt | sort > ${DEV_ENV}_names.txt
        
        # Find packages in dev but not in stable
        comm -23 ${DEV_ENV}_names.txt ${TARGET_ENV}_names.txt > added_packages.txt
        
        # For each added package, get its version from the dev list
        while read pkg; do
          # Skip empty lines
          if [ -z "$pkg" ]; then continue; fi
          ver=$(grep "^$pkg " $distro/${DEV_ENV}_installed_packages.txt | awk '{print $2}')
          echo "   + $pkg - version $ver" >> $DIFF_REPORT
          ADDED_COUNT=$((ADDED_COUNT+1))
        done < added_packages.txt
        
        if [ $ADDED_COUNT -eq 0 ]; then
          echo "   None" >> $DIFF_REPORT
        fi
        echo "" >> $DIFF_REPORT
        
        # 2. PACKAGES REMOVED (in stable but not in dev)
        echo "2. PACKAGES REMOVED (present in $TARGET_ENV but missing in $DEV_ENV)" >> $DIFF_REPORT
        echo "--------------------------------------------------------------" >> $DIFF_REPORT
        REMOVED_COUNT=0
        
        # Find packages in stable but not in dev
        comm -13 ${DEV_ENV}_names.txt ${TARGET_ENV}_names.txt > removed_packages.txt
        
        # For each removed package, get its version from the stable list
        while read pkg; do
          # Skip empty lines
          if [ -z "$pkg" ]; then continue; fi
          ver=$(grep "^$pkg " $distro/${TARGET_ENV}_installed_packages.txt | awk '{print $2}')
          echo "   - $pkg - version $ver" >> $DIFF_REPORT
          REMOVED_COUNT=$((REMOVED_COUNT+1))
        done < removed_packages.txt
        
        if [ $REMOVED_COUNT -eq 0 ]; then
          echo "   None" >> $DIFF_REPORT
        fi
        echo "" >> $DIFF_REPORT
        
        # 3. VERSION DIFFERENCES
        echo "3. PACKAGES WITH VERSION CHANGES ($TARGET_ENV vs $DEV_ENV)" >> $DIFF_REPORT
        echo "--------------------------------------------------------------" >> $DIFF_REPORT
        VERSION_COUNT=0
        
        # Find packages that exist in both but have different versions
        # Get all common packages
        comm -12 ${DEV_ENV}_names.txt ${TARGET_ENV}_names.txt > common_packages.txt
        
        # Check each common package for version differences
        while read pkg; do
          # Skip empty lines
          if [ -z "$pkg" ]; then continue; fi
          
          stable_ver=$(grep "^$pkg " $distro/${TARGET_ENV}_installed_packages.txt | awk '{print $2}')
          dev_ver=$(grep "^$pkg " $distro/${DEV_ENV}_installed_packages.txt | awk '{print $2}')
          
          if [ "$stable_ver" != "$dev_ver" ]; then
            echo "   * $pkg" >> $DIFF_REPORT
            echo "     $TARGET_ENV: $stable_ver" >> $DIFF_REPORT
            echo "     $DEV_ENV:    $dev_ver" >> $DIFF_REPORT
            echo "" >> $DIFF_REPORT
            VERSION_COUNT=$((VERSION_COUNT+1))
          fi
        done < common_packages.txt
        
        if [ $VERSION_COUNT -eq 0 ]; then
          echo "   None" >> $DIFF_REPORT
        fi
        echo "" >> $DIFF_REPORT
        
        # 4. SUMMARY
        echo "4. SUMMARY" >> $DIFF_REPORT
        echo "--------------------------------------------------------------" >> $DIFF_REPORT
        echo "   Total packages added:    $ADDED_COUNT" >> $DIFF_REPORT
        echo "   Total packages removed:  $REMOVED_COUNT" >> $DIFF_REPORT
        echo "   Total version changes:   $VERSION_COUNT" >> $DIFF_REPORT
        echo "   Total differences:       $((ADDED_COUNT+REMOVED_COUNT+VERSION_COUNT))" >> $DIFF_REPORT
        echo "" >> $DIFF_REPORT
        
        # 5. KERNEL VERSION CHANGES
        echo "5. KERNEL VERSION CHANGES" >> $DIFF_REPORT
        echo "--------------------------------------------------------------" >> $DIFF_REPORT
        echo "   Kernel packages removed:" >> $DIFF_REPORT
        grep -E "^linux-(image|headers|modules)" removed_packages.txt | while read pkg; do
          ver=$(grep "^$pkg " $distro/${TARGET_ENV}_installed_packages.txt | awk '{print $2}')
          echo "   - $pkg (version $ver)" >> $DIFF_REPORT
        done
        
        echo "" >> $DIFF_REPORT
        echo "   Kernel packages added:" >> $DIFF_REPORT
        grep -E "^linux-(image|headers|modules)" added_packages.txt | while read pkg; do
          ver=$(grep "^$pkg " $distro/${DEV_ENV}_installed_packages.txt | awk '{print $2}')
          echo "   + $pkg (version $ver)" >> $DIFF_REPORT
        done
        
        # Clean up temp files
        rm -f ${TARGET_ENV}_names.txt ${DEV_ENV}_names.txt
        rm -f added_packages.txt removed_packages.txt common_packages.txt
        
        echo "Comparison complete. Saving report to $DIFF_REPORT"
        cat $DIFF_REPORT
        git add $DIFF_REPORT
        git commit -m "Add diff report for $TARGET_ENV vs $DEV_ENV"
        git push origin main
      else
        echo "$DEV_ENV installed package list not found. Skipping comparison."
      fi
    fi
